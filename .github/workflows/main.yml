name: cicd-tutorial

on:
  push:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - run: bun --version

  # package.json 필수
  setup:
    runs-on: ubuntu-latest
#    needs: init
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - run: bun install

  test:
    runs-on: ubuntu-latest
#    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Bun 셋업
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 패키지 설치
        run: bun install

      - name: 테스트 수행
        run: bun test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Bun 셋업
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Node.js 셋업
        uses: actions/setup-node@v3
        with:
          node-version: '20.16.0'

      - name: SSH 셋업
        uses: webFactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{secrets.SSH_WISOFT_ADMIN_PRIVATE_KEY}}

      - name: SSH 파일 저장
        run: |
          echo "${{secrets.SSH_WISOFT_ADMIN_PRIVATE_KEY}}" > /tmp/new_id
          chmod 600 /tmp/new_id

      - name: 배스천 서버 연결 테스트
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/new_id ${{secrets.SSH_USER_WISOFT}}@${{secrets.SSH_HOST_WISOFT}} -p 10020 "echo 중간 서버 연결 성공"

      - name: 내부망 서버에 SSH 터널링으로 연결
        run: |
          ssh -J ${{secrets.SSH_USER_WISOFT}}@${{secrets.SSH_HOST_WISOFT}}:10020 \
              -o StrictHostKeyChecking=no -i /tmp/new_id ${{secrets.SSH_USER_WISOFT}}@${{secrets.SSH_HOST_DAISY_03}} "echo 내부망 서버 연결 성공"

      - name: 타겟 서버에 파일 복사
        run: |
          ssh -J ${{secrets.SSH_USER_WISOFT}}@${{secrets.SSH_HOST_WISOFT}}:10020 \
              -i /tmp/new_id -r "$GITHUB_WORKSPACE/"* ${{secrets.SSH_USER_WISOFT}}@${{secrets.SSH_HOST_DAISY_03}}:~/app
    
          
